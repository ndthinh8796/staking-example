/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenFarm, TokenFarmInterface } from "../TokenFarm";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ndtTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "emptyStakingBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "noTokenStaked",
    type: "error",
  },
  {
    inputs: [],
    name: "notEnoughAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "tokenNotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "addAllowedToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getTokenValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getUserSingleTokenValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserTotalStakedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "isTokenAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "issueTokensReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ndtToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
    ],
    name: "setPriceFeedContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "stakeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakingBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenPriceFeedMapping",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "unStakeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "uniqueTokenStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021ce380380620021ce8339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b611fb780620002176000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063877dd39d116100a2578063b21d6de211610071578063b21d6de2146102f1578063f1c5d6c2146102fb578063f2fde38b1461032c578063f9eaee0d14610348578063fd5e6dd11461037857610116565b8063877dd39d1461027d5780638da5cb5b1461029957806390be0661146102b7578063afc18441146102d557610116565b80634178617f116100e95780634178617f146101c7578063469bbc12146101e357806355b08abc146102135780635e5f2e2614610243578063715018a61461027357610116565b80630bea440d1461011b578063276b11da1461013757806327927b3e1461016757806329161a0014610197575b600080fd5b610135600480360381019061013091906116ad565b6103a8565b005b610151600480360381019061014c91906116ed565b6105ee565b60405161015e919061173c565b60405180910390f35b610181600480360381019061017c9190611757565b6106f9565b60405161018e9190611793565b60405180910390f35b6101b160048036038101906101ac91906116ed565b61072c565b6040516101be919061173c565b60405180910390f35b6101e160048036038101906101dc9190611757565b610751565b005b6101fd60048036038101906101f89190611757565b610833565b60405161020a919061173c565b60405180910390f35b61022d60048036038101906102289190611757565b61092b565b60405161023a919061173c565b60405180910390f35b61025d600480360381019061025891906117ae565b610943565b60405161026a9190611793565b60405180910390f35b61027b610982565b005b610297600480360381019061029291906116ed565b610a0a565b005b6102a1610b08565b6040516102ae9190611793565b60405180910390f35b6102bf610b31565b6040516102cc919061183a565b60405180910390f35b6102ef60048036038101906102ea9190611757565b610b57565b005b6102f9610df7565b005b61031560048036038101906103109190611757565b610f8c565b604051610323929190611855565b60405180910390f35b61034660048036038101906103419190611757565b6110f4565b005b610362600480360381019061035d9190611757565b6111eb565b60405161036f9190611899565b60405180910390f35b610392600480360381019061038d91906117ae565b611299565b60405161039f9190611793565b60405180910390f35b600082116103e2576040517f618ec7a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103eb816111eb565b610421576040517fc76142d700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161045e939291906118b4565b6020604051808303816000875af115801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a19190611917565b506104ac33826112d8565b81600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105389190611973565b925050819055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036105ea576005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b600080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161063f57600090506106f3565b60008061064b84610f8c565b9150915080600a61065c9190611afc565b82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106e49190611b47565b6106ee9190611bd0565b925050505b92915050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052816000526040600020602052806000526040600020600091509150505481565b6107596113b8565b73ffffffffffffffffffffffffffffffffffffffff16610777610b08565b73ffffffffffffffffffffffffffffffffffffffff16146107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c490611c5e565b60405180910390fd5b6004819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116108ad576040517fd10819fa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6004805490508110156109255761090583600483815481106108d5576108d4611c7e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166105ee565b826109109190611973565b9150808061091d90611cad565b9150506108b0565b50919050565b60026020528060005260406000206000915090505481565b6004818154811061095357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61098a6113b8565b73ffffffffffffffffffffffffffffffffffffffff166109a8610b08565b73ffffffffffffffffffffffffffffffffffffffff16146109fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f590611c5e565b60405180910390fd5b610a0860006113c0565b565b610a126113b8565b73ffffffffffffffffffffffffffffffffffffffff16610a30610b08565b73ffffffffffffffffffffffffffffffffffffffff1614610a86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7d90611c5e565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610c12576040517fd5613ad600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ce09190611cf5565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610d7457610d7333611484565b5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610daf929190611d29565b6020604051808303816000875af1158015610dce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df29190611917565b505050565b610dff6113b8565b73ffffffffffffffffffffffffffffffffffffffff16610e1d610b08565b73ffffffffffffffffffffffffffffffffffffffff1614610e73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6a90611c5e565b60405180910390fd5b60005b600580549050811015610f8957600060058281548110610e9957610e98611c7e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000610ed182610833565b9050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610f30929190611d29565b6020604051808303816000875af1158015610f4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f739190611917565b5050508080610f8190611cad565b915050610e76565b50565b6000806000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600081905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611045573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110699190611ddf565b50505091505060008273ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e09190611e93565b60ff16905081819550955050505050915091565b6110fc6113b8565b73ffffffffffffffffffffffffffffffffffffffff1661111a610b08565b73ffffffffffffffffffffffffffffffffffffffff1614611170576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116790611c5e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d690611f32565b60405180910390fd5b6111e8816113c0565b50565b600080600090505b60048054905081101561128e578273ffffffffffffffffffffffffffffffffffffffff166004828154811061122b5761122a611c7e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361127b576001915050611294565b808061128690611cad565b9150506111f3565b50600090505b919050565b600581815481106112a957600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116113b4576001600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113ac9190611973565b925050819055505b5050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60005b600580549050811015611610578173ffffffffffffffffffffffffffffffffffffffff16600582815481106114bf576114be611c7e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036115fd57600560016005805490506115199190611cf5565b8154811061152a57611529611c7e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005828154811061156957611568611c7e565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060058054806115c3576115c2611f52565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055611610565b808061160890611cad565b915050611487565b5050565b600080fd5b6000819050919050565b61162c81611619565b811461163757600080fd5b50565b60008135905061164981611623565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061167a8261164f565b9050919050565b61168a8161166f565b811461169557600080fd5b50565b6000813590506116a781611681565b92915050565b600080604083850312156116c4576116c3611614565b5b60006116d28582860161163a565b92505060206116e385828601611698565b9150509250929050565b6000806040838503121561170457611703611614565b5b600061171285828601611698565b925050602061172385828601611698565b9150509250929050565b61173681611619565b82525050565b6000602082019050611751600083018461172d565b92915050565b60006020828403121561176d5761176c611614565b5b600061177b84828501611698565b91505092915050565b61178d8161166f565b82525050565b60006020820190506117a86000830184611784565b92915050565b6000602082840312156117c4576117c3611614565b5b60006117d28482850161163a565b91505092915050565b6000819050919050565b60006118006117fb6117f68461164f565b6117db565b61164f565b9050919050565b6000611812826117e5565b9050919050565b600061182482611807565b9050919050565b61183481611819565b82525050565b600060208201905061184f600083018461182b565b92915050565b600060408201905061186a600083018561172d565b611877602083018461172d565b9392505050565b60008115159050919050565b6118938161187e565b82525050565b60006020820190506118ae600083018461188a565b92915050565b60006060820190506118c96000830186611784565b6118d66020830185611784565b6118e3604083018461172d565b949350505050565b6118f48161187e565b81146118ff57600080fd5b50565b600081519050611911816118eb565b92915050565b60006020828403121561192d5761192c611614565b5b600061193b84828501611902565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061197e82611619565b915061198983611619565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156119be576119bd611944565b5b828201905092915050565b60008160011c9050919050565b6000808291508390505b6001851115611a20578086048111156119fc576119fb611944565b5b6001851615611a0b5780820291505b8081029050611a19856119c9565b94506119e0565b94509492505050565b600082611a395760019050611af5565b81611a475760009050611af5565b8160018114611a5d5760028114611a6757611a96565b6001915050611af5565b60ff841115611a7957611a78611944565b5b8360020a915084821115611a9057611a8f611944565b5b50611af5565b5060208310610133831016604e8410600b8410161715611acb5782820a905083811115611ac657611ac5611944565b5b611af5565b611ad884848460016119d6565b92509050818404811115611aef57611aee611944565b5b81810290505b9392505050565b6000611b0782611619565b9150611b1283611619565b9250611b3f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611a29565b905092915050565b6000611b5282611619565b9150611b5d83611619565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b9657611b95611944565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611bdb82611619565b9150611be683611619565b925082611bf657611bf5611ba1565b5b828204905092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611c48602083611c01565b9150611c5382611c12565b602082019050919050565b60006020820190508181036000830152611c7781611c3b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611cb882611619565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611cea57611ce9611944565b5b600182019050919050565b6000611d0082611619565b9150611d0b83611619565b925082821015611d1e57611d1d611944565b5b828203905092915050565b6000604082019050611d3e6000830185611784565b611d4b602083018461172d565b9392505050565b600069ffffffffffffffffffff82169050919050565b611d7181611d52565b8114611d7c57600080fd5b50565b600081519050611d8e81611d68565b92915050565b6000819050919050565b611da781611d94565b8114611db257600080fd5b50565b600081519050611dc481611d9e565b92915050565b600081519050611dd981611623565b92915050565b600080600080600060a08688031215611dfb57611dfa611614565b5b6000611e0988828901611d7f565b9550506020611e1a88828901611db5565b9450506040611e2b88828901611dca565b9350506060611e3c88828901611dca565b9250506080611e4d88828901611d7f565b9150509295509295909350565b600060ff82169050919050565b611e7081611e5a565b8114611e7b57600080fd5b50565b600081519050611e8d81611e67565b92915050565b600060208284031215611ea957611ea8611614565b5b6000611eb784828501611e7e565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611f1c602683611c01565b9150611f2782611ec0565b604082019050919050565b60006020820190508181036000830152611f4b81611f0f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220c453daafc2ca771d37be79f1a3d488e3545e07d6f374fe6d105a79c37fdf3c4764736f6c634300080d0033";

type TokenFarmConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenFarmConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenFarm__factory extends ContractFactory {
  constructor(...args: TokenFarmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TokenFarm";
  }

  deploy(
    _ndtTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenFarm> {
    return super.deploy(
      _ndtTokenAddress,
      overrides || {}
    ) as Promise<TokenFarm>;
  }
  getDeployTransaction(
    _ndtTokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ndtTokenAddress, overrides || {});
  }
  attach(address: string): TokenFarm {
    return super.attach(address) as TokenFarm;
  }
  connect(signer: Signer): TokenFarm__factory {
    return super.connect(signer) as TokenFarm__factory;
  }
  static readonly contractName: "TokenFarm";
  public readonly contractName: "TokenFarm";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenFarmInterface {
    return new utils.Interface(_abi) as TokenFarmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenFarm {
    return new Contract(address, _abi, signerOrProvider) as TokenFarm;
  }
}
